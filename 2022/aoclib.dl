(include "../library.dl")

(defun + (&rest values)
  (var sum 0)
  (while (not (null? values))
            (to sum (+ (first values)))
            (pop values))
  sum)

(defun part (part)
  (println "------------------------------------------------------------------------------------------------------------")
  (println "Part " part)
  (println "------------------------------------------------------------------------------------------------------------"))

(defun result (result)
  (println "Result: " result))

(var input ())
(defmacro get-input (release)
  (list (list (quote setq) (quote input) (list (quote if) release
											  (list (quote include) "input")
											  (list (quote include) "example")))
		(list (quote println) "Input: " (quote input))))
